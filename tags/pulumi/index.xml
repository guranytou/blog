<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pulumi on しゅがーぽっと</title><link>https://guranytou.github.io/blog/tags/pulumi/</link><description>Recent content in Pulumi on しゅがーぽっと</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Fri, 27 May 2022 00:33:09 +0900</lastBuildDate><atom:link href="https://guranytou.github.io/blog/tags/pulumi/index.xml" rel="self" type="application/rss+xml"/><item><title>Pulumiを利用してAWS上でWebサーバ一式を立ててみた その２</title><link>https://guranytou.github.io/blog/post/20220527-create-aws-resource-use-pulumi-2/</link><pubDate>Fri, 27 May 2022 00:33:09 +0900</pubDate><guid>https://guranytou.github.io/blog/post/20220527-create-aws-resource-use-pulumi-2/</guid><description>前回： Pulumiを利用してAWS上でWebサーバ一式を立ててみた その１
はじめに 今回は実際にALB-EC2でWebサーバを立ててみます。
構成は以前Terraformで作成したものと同じものとします。
今回のソースコード：Github
書いたコードの解説 ネットワーク周りのコードを作成する
VPC、Subnetを作成します。 pulumi.Run(func(ctx *pulumi.Context) error { vpc, err := ec2.NewVpc(ctx, &amp;#34;example_vpc&amp;#34;, &amp;amp;ec2.VpcArgs{ CidrBlock: pulumi.String(&amp;#34;10.100.0.0/16&amp;#34;), Tags: pulumi.StringMap{ &amp;#34;Name&amp;#34;: pulumi.String(&amp;#34;example_vpc&amp;#34;), }, }) if err != nil { return err } pubSub1a, err := ec2.NewSubnet(ctx, &amp;#34;pubSub1a&amp;#34;, &amp;amp;ec2.SubnetArgs{ VpcId: vpc.ID(), CidrBlock: pulumi.String(&amp;#34;10.100.0.0/24&amp;#34;), AvailabilityZone: pulumi.String(&amp;#34;ap-northeast-1a&amp;#34;), Tags: pulumi.StringMap{ &amp;#34;Name&amp;#34;: pulumi.String(&amp;#34;example_public_1a&amp;#34;), }, }) if err != nil { return err } pubSub1c, err := ec2.NewSubnet(ctx, &amp;#34;pubSub1c&amp;#34;, &amp;amp;ec2.SubnetArgs{ VpcId: vpc.</description></item><item><title>Pulumiを利用してAWS上でWebサーバ一式を立ててみた その１</title><link>https://guranytou.github.io/blog/post/20220523-create-aws-resource-use-pulumi-1/</link><pubDate>Mon, 23 May 2022 09:55:46 +0900</pubDate><guid>https://guranytou.github.io/blog/post/20220523-create-aws-resource-use-pulumi-1/</guid><description>はじめに 普段はTerraformを利用していますが、PulumiだったりSDKだったり、汎用言語を使ってAWSリソースを作ってみたかったのでやってみました。
言語は現在勉強しているGoを使いました。
Pulumiを導入してみる Macで開発しているのでbrew installしました。
brew install pulumi チュートリアル https://www.pulumi.com/docs/get-started/aws/
このページにチュートリアルがあるのでこのガイドに従ってやっていきました（内容は割愛します）
試し書き チュートリアルでS3バケットを作ることができました。
ということで、試しに公式Docを読みながらVPCを1つ作成してみます。
コードを準備する package main import ( &amp;#34;github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2&amp;#34; &amp;#34;github.com/pulumi/pulumi/sdk/v3/go/pulumi&amp;#34; ) func main() { pulumi.Run(func(ctx *pulumi.Context) error { vpc, err := ec2.NewVpc(ctx, &amp;#34;example_vpc&amp;#34;, &amp;amp;ec2.VpcArgs{ CidrBlock: pulumi.String(&amp;#34;10.100.0.0/16&amp;#34;), Tags: pulumi.StringMap{ &amp;#34;Name&amp;#34;: pulumi.String(&amp;#34;example_vpc&amp;#34;), }, }) if err != nil { return err } ctx.Export(&amp;#34;vpcid: &amp;#34;, vpc.ID()) return nil }) } pulumi previewで見てみる
pulumi previewを実行し、作成できるか確認してみます。 &amp;gt; pulumi preview Previewing update (dev) View Live: https://app.</description></item></channel></rss>